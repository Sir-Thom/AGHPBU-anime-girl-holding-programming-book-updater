#!/bin/sh
# Aghpbu
#find ~ Anime-Girls-Holding-Programming-Books -type d -maxdepth 2
cd ~

#Install
Install(){
        echo "Installing Anime-Girls-Holding-Programming-Books..."
        cd ~/Pictures
        git clone https://github.com/cat-milk/Anime-Girls-Holding-Programming-Books.git
        echo "Installation complete the diretory is install in ~/Pictures"   
}

#Update
update(){
echo -e "Analyzing Home folder for Anime-Girls-Holding-Programming-Books..."
FILES=`find $(pwd) -maxdepth 1 -type d -not -path '*/\.*' | sort `>& /dev/null
for f in $FILES
do
    echo -e "Analyzing $f...">& /dev/null

    
    #find Anime-Girls-Holding-Programming-Books -maxdepth 0 
    DIRECTORY=$f/Anime-Girls-Holding-Programming-Books
         if [ -d "$DIRECTORY" ]; then
         echo "Anime-Girls-Holding-Programming-Books is present. Do you want to update it ? (y/n):  "
        read
         if [[ $REPLY == "y" || $REPLY ==  "Y" ]]; then
                 cd $DIRECTORY
                 #pwd 
                 echo "Updating the waifus..." 
                  git pull  https://github.com/cat-milk/Anime-Girls-Holding-Programming-Books.git
                 echo "Update complete"  
                 break
         fi
         if [[  $REPLY == "n" || $REPLY == "N" ]];then
                exit
         fi
        if [[ $REPLY != "y" || $REPLY != "Y" || $REPLY != "n" || $REPLY != "N" ]];then
                echo "Invalid input. Please enter y or n"
                read
                if [[ $REPLY == "y" || $REPLY ==  "Y" ]]; then
                 cd $DIRECTORY
                 pwd 
                 echo "Updating the waifus..." 
                 git pull  https://github.com/cat-milk/Anime-Girls-Holding-Programming-Books.git
                 echo "Update complete"  
                 break
                fi
                   if [[  $REPLY == "n" || $REPLY == "N" ]];then
                exit
         fi

         fi 
         fi
done
}
Help(){
        while IFS= read -r line; do
	    printf "%s\n" "$line"
	done <<-EOF
	Usage:
	    ${0##*/} -I
	    ${0##*/} -U
	    ${0##*/} -h
	
	Options:
	    -h show help
	    -U Update
	    -I Install
	EOF

}
while getopts 'vq:IUVa:' OPT; do
        case $OPT in
                U)
                        update
                        exit 0   
                         ;;
                I)
                        Install
                        exit 0
                         ;;
                 *)
                        Help
                        exit 1
                        ;;
	esac
done
shift $((OPTIND - 1))

#if [[ $1 == "install"  ]]; then 
 #       $1 = install  
#fi
#if [[ $1 == "update"  ]]; then 
 #       $1 = update  
#fi

